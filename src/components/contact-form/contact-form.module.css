
.button,
.fieldset,
.input,
.textarea {
  all: unset;
  font-size: 0.9375rem;
}

.dialog-overlay {
  background-color: var(--overlay-color);
  backdrop-filter: blur(8px);
  position: fixed;
  inset: 0;
  animation: overlay-show var(--transition-duration) cubic-bezier(0.16, 1, 0.3, 1) forwards;
  z-index: 1;
}

.dialog-content {
  color: var(--text-color);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 768px;
  max-height: 85vh;
  animation: content-show var(--transition-duration) cubic-bezier(0.16, 1, 0.3, 1);
  backdrop-filter: blur(4px);
  padding-bottom: 1vh;
  z-index: 2;
}

.dialog-content[data-state="closed"] {
  animation: content-hide var(--transition-duration) cubic-bezier(0.16, 1, 0.3, 1) 75ms;
}

.dialog-overlay[data-state="closed"] {
  animation: overlay-hide var(--transition-duration) cubic-bezier(0.16, 1, 0.3, 1) forwards 75ms;
}

.dialog-content:focus {
  outline: none;
}

.contact-form {
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  padding: 1.5rem;
  border-radius: 0.75rem;
  box-shadow: 0 0.375rem 0.75rem rgba(0, 0, 0, 0.15), 0 0 0 0.1rem var(--background-color);
}

.dialog-header {
  display: flex;
  justify-content: space-between;
}

.dialog-close {
  font-size: 0.875rem;
  color: var(--muted-text);
  transition: color var(--transition-duration) ease;
}

.dialog-close:hover {
  color: var(--text-color);
}

.dialog-title {
  margin: 0;
  font-weight: 800;
  color: var(--text-color);
  font-size: 2.25rem;
}

.dialog-description {
  margin: 0.675rem 0 1.25rem;
  color: var(--muted-text);
  font-size: 1.25rem;
  line-height: 1.5;
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.375rem;
  padding: 0 15px;
  line-height: 1;
  font-weight: 500;
  height: 35px;
  user-select: none;
}

.button:focus-visible {
  outline: 2px solid var(--text-color);
  outline-offset: 1px;
}

.button:focus:not(:focus-visible) {
  outline: 0;
}

.fieldset {
  gap: 0.25rem 0.75rem;
  margin-bottom: 0.9375rem;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
}

.label {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
  font-weight: 400;
  font-family: var(--font-display);
}

.input {
  flex: 1;
}

.input,
.textarea {
  width: 100%;
  border-radius: 0.375rem;
  padding: 0.625rem;
  background-color: var(--background-color);
  line-height: 1;
  border-color: var(--border-color);
  resize: vertical;
  color: var(--text-color);
  box-shadow: 0 0 0 1px var(--border-color);
  transition: box-shadow 150ms ease;
}

.fieldset.error:not(:last-of-type) {
  margin-bottom: 1.75rem;
}

.textarea:focus,
.input:focus {
  box-shadow: 0 0 0 1px var(--border-color), 0 0 0 2px var(--primary-color-550);
}

.footer {
  display: flex;
  gap: 1rem;
}

.submit-button {
  margin-inline-start: auto;
  color: white;
  background-image: linear-gradient(to bottom, var(--primary-color-500), var(--primary-color-550));
}

.resume:hover {
  filter: brightness(110%);
}

.submit-button:disabled {
  pointer-events: none;
  opacity: 0.5;
}

@keyframes overlay-show {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes overlay-hide {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes content-show {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }

  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes content-hide {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}

.validation-error {
  width: 100%;
  font-size: 0.75rem;
  color: brown;
  letter-spacing: 0.025em;
  position: absolute;
  top: 100%;
  margin-top: 0.25em;
}

.success {
  color: #129211;
  font-size: 0.875rem;
  font-weight: 400;
  letter-spacing: var(--tighter);
  font-family: var(--font-mono);
  align-items: baseline;
  gap: 0.25rem;
}

.success svg {
  display: inline;
  transform: translate3d(0, 0.125rem, 0);
  min-width: max-content;
}